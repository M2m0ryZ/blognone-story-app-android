package com.benzneststudios.blognonestory;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.benzneststudios.blognonestory.BlognoneTags;
import com.benzneststudios.blognonestory.BlognoneTopicCache;
import com.benzneststudios.blognonestory.BlognoneFavoriteTopic;
import com.benzneststudios.blognonestory.BlognoneHistoryTopic;

import com.benzneststudios.blognonestory.BlognoneTagsDao;
import com.benzneststudios.blognonestory.BlognoneTopicCacheDao;
import com.benzneststudios.blognonestory.BlognoneFavoriteTopicDao;
import com.benzneststudios.blognonestory.BlognoneHistoryTopicDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig blognoneTagsDaoConfig;
    private final DaoConfig blognoneTopicCacheDaoConfig;
    private final DaoConfig blognoneFavoriteTopicDaoConfig;
    private final DaoConfig blognoneHistoryTopicDaoConfig;

    private final BlognoneTagsDao blognoneTagsDao;
    private final BlognoneTopicCacheDao blognoneTopicCacheDao;
    private final BlognoneFavoriteTopicDao blognoneFavoriteTopicDao;
    private final BlognoneHistoryTopicDao blognoneHistoryTopicDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        blognoneTagsDaoConfig = daoConfigMap.get(BlognoneTagsDao.class).clone();
        blognoneTagsDaoConfig.initIdentityScope(type);

        blognoneTopicCacheDaoConfig = daoConfigMap.get(BlognoneTopicCacheDao.class).clone();
        blognoneTopicCacheDaoConfig.initIdentityScope(type);

        blognoneFavoriteTopicDaoConfig = daoConfigMap.get(BlognoneFavoriteTopicDao.class).clone();
        blognoneFavoriteTopicDaoConfig.initIdentityScope(type);

        blognoneHistoryTopicDaoConfig = daoConfigMap.get(BlognoneHistoryTopicDao.class).clone();
        blognoneHistoryTopicDaoConfig.initIdentityScope(type);

        blognoneTagsDao = new BlognoneTagsDao(blognoneTagsDaoConfig, this);
        blognoneTopicCacheDao = new BlognoneTopicCacheDao(blognoneTopicCacheDaoConfig, this);
        blognoneFavoriteTopicDao = new BlognoneFavoriteTopicDao(blognoneFavoriteTopicDaoConfig, this);
        blognoneHistoryTopicDao = new BlognoneHistoryTopicDao(blognoneHistoryTopicDaoConfig, this);

        registerDao(BlognoneTags.class, blognoneTagsDao);
        registerDao(BlognoneTopicCache.class, blognoneTopicCacheDao);
        registerDao(BlognoneFavoriteTopic.class, blognoneFavoriteTopicDao);
        registerDao(BlognoneHistoryTopic.class, blognoneHistoryTopicDao);
    }
    
    public void clear() {
        blognoneTagsDaoConfig.getIdentityScope().clear();
        blognoneTopicCacheDaoConfig.getIdentityScope().clear();
        blognoneFavoriteTopicDaoConfig.getIdentityScope().clear();
        blognoneHistoryTopicDaoConfig.getIdentityScope().clear();
    }

    public BlognoneTagsDao getBlognoneTagsDao() {
        return blognoneTagsDao;
    }

    public BlognoneTopicCacheDao getBlognoneTopicCacheDao() {
        return blognoneTopicCacheDao;
    }

    public BlognoneFavoriteTopicDao getBlognoneFavoriteTopicDao() {
        return blognoneFavoriteTopicDao;
    }

    public BlognoneHistoryTopicDao getBlognoneHistoryTopicDao() {
        return blognoneHistoryTopicDao;
    }

}
